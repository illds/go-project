// Code generated by MockGen. DO NOT EDIT.
// Source: GOHW-1/internal/controller (interfaces: PickUpPointsRepo)

// Package controller is a generated GoMock package.
package controller

import (
	model "GOHW-1/internal/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPickUpPointsRepo is a mock of PickUpPointsRepo interface.
type MockPickUpPointsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPickUpPointsRepoMockRecorder
}

// MockPickUpPointsRepoMockRecorder is the mock recorder for MockPickUpPointsRepo.
type MockPickUpPointsRepoMockRecorder struct {
	mock *MockPickUpPointsRepo
}

// NewMockPickUpPointsRepo creates a new mock instance.
func NewMockPickUpPointsRepo(ctrl *gomock.Controller) *MockPickUpPointsRepo {
	mock := &MockPickUpPointsRepo{ctrl: ctrl}
	mock.recorder = &MockPickUpPointsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPickUpPointsRepo) EXPECT() *MockPickUpPointsRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPickUpPointsRepo) Create(arg0 context.Context, arg1 *model.PickUpPoint) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockPickUpPointsRepoMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPickUpPointsRepo)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockPickUpPointsRepo) Delete(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockPickUpPointsRepoMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockPickUpPointsRepo)(nil).Delete), arg0, arg1)
}

// GetByID mocks base method.
func (m *MockPickUpPointsRepo) GetByID(arg0 context.Context, arg1 int64) (*model.PickUpPoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0, arg1)
	ret0, _ := ret[0].(*model.PickUpPoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockPickUpPointsRepoMockRecorder) GetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockPickUpPointsRepo)(nil).GetByID), arg0, arg1)
}

// List mocks base method.
func (m *MockPickUpPointsRepo) List(arg0 context.Context) ([]model.PickUpPoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]model.PickUpPoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockPickUpPointsRepoMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockPickUpPointsRepo)(nil).List), arg0)
}

// Update mocks base method.
func (m *MockPickUpPointsRepo) Update(arg0 context.Context, arg1 int64, arg2 model.PickUpPoint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockPickUpPointsRepoMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockPickUpPointsRepo)(nil).Update), arg0, arg1, arg2)
}
